---
hibernate:
    cache:
        queries: false
        use_second_level_cache: true
        use_query_cache: false
        region.factory_class: 'org.hibernate.cache.ehcache.EhCacheRegionFactory'

dataSource:
    pooled: true
    jmxExport: true
    driverClassName: org.h2.Driver
    username: sa
    password:

environments:
    development:
        dataSource:
            dbCreate: create-drop
            url: jdbc:h2:file:./db/devDb
        grails:
            serverURL: http://localhost:9090/rundeck
            profiler:
                disable: false
        plugin:
            refreshDelay: 5000
        feature:
            incubator:
                '*':  true
        rundeck:
            feature:
                '*':
                    enabled:  true

    test:
        dataSource:
            dbCreate: update
            url: jdbc:h2:file:./db/testDb
        grails:
            profiler:
                disable: true

    production:
        dataSource:
            dbCreate: update
            url: jdbc:h2:file:rundeck/grailsh
        grails:
            profiler:
                disable: true
        feature:
            incubator:
                feature:  false #disable feature toggling
                jobs: true  #enable takeover schedule feature
        rundeck:
            feature:
                workflowDynamicStepSummaryGUI:  #enable dynamic workflow step descriptions in GUI by default
                    enabled:  true
---
---
grails:
    profile: web
    codegen:
        defaultPackage: rundeckapp
    spring:
        transactionManagement:
            proxies: false
    json:
        legacy:
            builder: false
    mail:
        default:
            from: rundeck-server@localhost
    databinding:
        dateFormats:
            - "yyyy-MM-dd HH:mm:ss.S" # default grails patterns
            - "yyyy-MM-dd'T'hh:mm:ss'Z'"

            - "yyyy-MM-dd'T'HH:mm:ssX"  # ISO8601 patterns
            - "yyyy-MM-dd'T'HH:mm:ss.SSSX"
            - "yyyy-MM-dd'T'HH:mm:ssXX"
            - "yyyy-MM-dd'T'HH:mm:ss.SSSXX"
            - "yyyy-MM-dd'T'HH:mm:ssXXX"
            - "yyyy-MM-dd'T'HH:mm:ss.SSSXXX"
        trimStrings: false
info:
    app:
        name: '@info.app.name@'
        version: '@info.app.version@'
        grailsVersion: '@info.app.grailsVersion@'
spring:

    groovy:
        template:
            check-template-location: false

---
grails:
    enable:
        native2ascii: true   # enabled native2ascii conversion of i18n properties files
    mime:
        use:
            accept:
                header: true
        file:
            extensions: true
        types:
            all: '*/*'
            atom: application/atom+xml
            css: text/css
            csv: text/csv
            form: application/x-www-form-urlencoded
            html:
              - text/html
              - application/xhtml+xml
            js: text/javascript
            json:
              - application/json
              - text/json
            multipartForm: multipart/form-data
            pdf: application/pdf
            rss: application/rss+xml
            text: text/plain
            hal:
              - application/hal+json
              - application/hal+xml
            xml:
              - text/xml
              - application/xml
            yaml:
              - text/yaml
              - application/yaml
    urlmapping:
        cache:
            maxsize: 1000
    controllers:
        defaultScope: singleton
    converters:
        encoding: UTF-8
    views:
        default:
            codec: none
        gsp:
            encoding: UTF-8
            htmlcodec: xml
            codecs:
                expression: html
                scriptlets: html
                taglib: none
                staticparts: none
    plugins:
        twitterbootstrap:
            fixtaglib:  true
    assets:
        less:
            compile: 'less4j'
        plugin:
            twitter-bootstrap:
                excludes:
                    - "**/*.less"
                includes:
                    - "bootstrap.less"
    plugin:
        springsecurity:
            securityConfigType: 'InterceptUrlMap'
            interceptUrlMap: [
                {pattern: '/',               access:['permitAll']},
                {pattern: '/user/login',          access:['permitAll']},
                {pattern: '/user/error',          access:['permitAll']},
                {pattern: '/user/logout',          access:['permitAll']},
                {pattern: '/user/loggedout',          access:['permitAll']},
                {pattern: '/images/*',          access:['permitAll']},
                {pattern: '/css/*',          access:['permitAll']},
                {pattern: '/js/*',          access:['permitAll']},
                {pattern: '/feed/*',          access:['permitAll']},
                {pattern: '/test/*',          access:['permitAll']},
                {pattern: '/api/*',          access:['permitAll']},
                {pattern: '/static/**',          access:['permitAll']},
                {pattern: '/assets/*',          access:['permitAll']},
                {pattern: '/fonts/*',          access:['permitAll']}
            ]

endpoints:
    jmx:
        unique-names: true

beans:
    cacheManager:
        shared: true

rundeck:
    metrics:
        enabled: true
        jmxEnabled: true
        requestFilterEnabled: true
        servletUrlPattern: '/metrics/*'
    execution:
        finalize:
            retryMax: 10
            retryDelay: 5000
        stats:
            retryMax: 5
            retryDelay: 5000
        gui:
            execution:
                tail:
                    lines:
                        default:  20
                        max:  500
        logs:
            fileStorage:
                cancelOnStorageFailure: true
    mail:
        template:
            subject:  '${notification.eventStatus} [${execution.project}] ${job.group}/${job.name} ${execution.argstring}'
    security:
        useHMacRequestTokens: true
        apiCookieAccess:
            enabled:  true
        authorization:
            containerPrincipal:
                enabled: true
            container:
                enabled: true
            preauthenticated:
                enabled: false
                attributeName: null
                userNameHeader: null
                userRolesHeader: null
                delimiter: ','
    web:
        metrics:
            servlets:
                metrics:
                    enabled:  true
                ping:
                    enabled:  true
                threads:
                    enabled: true
                healthcheck:
                    enabled:  true
    gui:
        job:
            description:
                disableHTML: false
        clusterIdentityInHeader: false
        clusterIdentityInFooter: true
    pagination:
        default:
            max: 20
    projectService:
        projectExportCache:
            spec:   'expireAfterAccess=30m'
    projectManagerService:
        projectCache:
            spec:   'expireAfterAccess=10m,refreshAfterWrite=1m'
    logFileStorageService:
        startup:
            resumeMode: 'async'
    projectsStorageType: 'filesystem'
    ajax:
        compression: 'gzip'
        executionState:
            compression:
                nodeThreshold: 500
    nodeService:
        nodeCache:
            spec: 'refreshInterval=30s'
            enabled: true
    executionMode: 'active'

plugin:
    platformCore:
        security:
            disabled: true
        navigation:
            disabled: true
        ui:
            disabled: true
        events:
            disabled: true
            gorm:
                disabled: true
        show:
            startup:
                info: false
